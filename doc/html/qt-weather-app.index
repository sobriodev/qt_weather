<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE QDOCINDEX>
<INDEX url="" title="QT weather app Reference Documentation" version="" project="QT weather app">
    <namespace threadsafety="unspecified" name="" status="active" access="public" module="qt weather app">
        <class threadsafety="unspecified" name="DataStorage" href="datastorage.html" status="active" access="public" location="datastorage.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/datastorage.h" lineno="7" module="core" brief="Stores all readouts data and manages serializing and deserializing them">
            <enum threadsafety="unspecified" name="SaveInterval" fullname="DataStorage::SaveInterval" href="datastorage.html#SaveInterval-enum" status="active" access="public" location="datastorage.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/datastorage.h" lineno="10">
                <value name="Each5Min" value="5"/>
                <value name="Each10Min" value="10"/>
                <value name="Each30Min" value="30"/>
                <value name="EachHour" value="60"/>
            </enum>
            <function threadsafety="unspecified" name="DataStorage" fullname="DataStorage::DataStorage" href="datastorage.html#DataStorage" status="active" access="public" location="datastorage.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/datastorage.h" lineno="14" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" brief="Constructor. The validM parameter is used to set data saving interval (in minutes). Correct interval configurations are:" signature="DataStorage(int validM)">
                <parameter left="int" right="" name="validM" default="DefaultValidMinutes"/>
            </function>
            <function threadsafety="unspecified" name="append" fullname="DataStorage::append" href="datastorage.html#append" status="active" access="public" location="datastorage.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/datastorage.h" lineno="16" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Save data readout using readout argument. Only valid readouts are saved" signature="void append(const SensorData &amp;readout)">
                <parameter left="const SensorData &amp;" right="" name="readout" default=""/>
            </function>
            <function threadsafety="unspecified" name="deleteOldReadouts" fullname="DataStorage::deleteOldReadouts" href="datastorage.html#deleteOldReadouts" status="active" access="public" location="datastorage.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/datastorage.h" lineno="19" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Delete old readouts from storage. The cricital delete date is built from days and timeSub arguments. For example setting days argument to 5 and timeSub to 1 hour, 31 minutes and 5 seconds deletes all readouts older or equal 5 days, 1 hour, 31 minutes and 5 seconds from now" signature="void deleteOldReadouts(int days, const QTime &amp;timeSub)">
                <parameter left="int" right="" name="days" default=""/>
                <parameter left="const QTime &amp;" right="" name="timeSub" default=""/>
            </function>
            <function threadsafety="unspecified" name="deserialize" fullname="DataStorage::deserialize" href="datastorage.html#deserialize" status="active" access="public" location="datastorage.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/datastorage.h" lineno="17" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Deserialize Storage from JSON object where input stores serialized JSON data" signature="void deserialize(const QJsonObject &amp;input)">
                <parameter left="const QJsonObject &amp;" right="" name="input" default=""/>
            </function>
            <function threadsafety="unspecified" name="compareReadouts" fullname="DataStorage::compareReadouts" href="datastorage.html#compareReadouts" status="active" access="private" location="datastorage.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/datastorage.h" lineno="23" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" brief="Compares two readouts by checking their dates. The readout data arguements are passed in the first and second arguments. This function returns true if the readouts dates are not equal, false otherwise" signature="bool compareReadouts(const SensorData &amp;first, const SensorData &amp;second) const">
                <parameter left="const SensorData &amp;" right="" name="first" default=""/>
                <parameter left="const SensorData &amp;" right="" name="second" default=""/>
            </function>
            <function threadsafety="unspecified" name="dateValid" fullname="DataStorage::dateValid" href="datastorage.html#dateValid" status="active" access="private" location="datastorage.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/datastorage.h" lineno="27" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" brief="This function returns true if date argument can be converted to a QDate object, false otherwise" signature="bool dateValid(const QString &amp;date) const">
                <parameter left="const QString &amp;" right="" name="date" default=""/>
            </function>
            <function threadsafety="unspecified" name="deserializable" fullname="DataStorage::deserializable" href="datastorage.html#deserializable" status="active" access="private" location="datastorage.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/datastorage.h" lineno="25" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" brief="This function checks if input JSON object passed in input argument is fully deserializable as a SensorData object" signature="bool deserializable(const QJsonObject &amp;input) const">
                <parameter left="const QJsonObject &amp;" right="" name="input" default=""/>
            </function>
            <function threadsafety="unspecified" name="doubleValid" fullname="DataStorage::doubleValid" href="datastorage.html#doubleValid" status="active" access="private" location="datastorage.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/datastorage.h" lineno="26" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" brief="This function returns true if value parameter can be converted double, false otherwise" signature="bool doubleValid(const QJsonValue &amp;value) const">
                <parameter left="const QJsonValue &amp;" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="timeValid" fullname="DataStorage::timeValid" href="datastorage.html#timeValid" status="active" access="private" location="datastorage.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/datastorage.h" lineno="28" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" brief="This function return true if time argument can be converted to a QTime object, false otherwise" signature="bool timeValid(const QString &amp;time) const">
                <parameter left="const QString &amp;" right="" name="time" default=""/>
            </function>
            <function threadsafety="unspecified" name="validReadout" fullname="DataStorage::validReadout" href="datastorage.html#validReadout" status="active" access="private" location="datastorage.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/datastorage.h" lineno="22" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" brief="Checks if the data from sensor passed in readout argument can be stored. Only readouts with valid date and time will be saved" signature="bool validReadout(const SensorData &amp;readout) const">
                <parameter left="const SensorData &amp;" right="" name="readout" default=""/>
            </function>
            <function threadsafety="unspecified" name="serialize" fullname="DataStorage::serialize" href="datastorage.html#serialize" status="active" access="public" location="datastorage.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/datastorage.h" lineno="18" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Serialize Storage data. The output argument is an output JSON object" signature="void serialize(QJsonObject &amp;output) const">
                <parameter left="QJsonObject &amp;" right="" name="output" default=""/>
            </function>
            <variable threadsafety="unspecified" name="DefaultValidMinutes" fullname="DataStorage::DefaultValidMinutes" href="datastorage.html#DefaultValidMinutes-var" status="active" access="public" location="datastorage.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/datastorage.h" lineno="12" type="const int = Each30Min" static="true" brief="This variable holds the variable stores default saving minutes"/>
            <variable threadsafety="unspecified" name="JsonKey" fullname="DataStorage::JsonKey" href="datastorage.html#JsonKey-var" status="active" access="public" location="datastorage.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/datastorage.h" lineno="11" type="const QString" static="true" brief="This variable holds the variable stores default JSON key used to serialize storage"/>
        </class>
        <page name="classes.html" href="classes.html" status="active" location="main.qdoc" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/doc/doc-src/main.qdoc" lineno="54" subtype="page" title="All clasess" fulltitle="All clasess" subtitle="" module="QT weather app">
            <contents name="annotated-classes" title="Annotated classes" level="1"/>
            <contents name="function-index" title="Function index" level="1"/>
        </page>
        <page name="index.html" href="index.html" status="active" location="main.qdoc" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/doc/doc-src/main.qdoc" lineno="41" subtype="page" title="QT weather app" fulltitle="QT weather app" subtitle="" module="QT weather app">
            <contents name="about-app" title="About app" level="1"/>
            <contents name="toolchains" title="Toolchains" level="1"/>
        </page>
        <namespace threadsafety="unspecified" name="Ui" href="ui.html" status="internal" access="private" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="15"/>
        <class threadsafety="unspecified" name="MainWindow" href="mainwindow.html" status="active" access="public" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="19" module="core" brief="Joins the GUI and the application logic">
            <function threadsafety="unspecified" name="MainWindow" fullname="MainWindow::MainWindow" href="mainwindow.html#MainWindow" status="active" access="public" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="28" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" brief="Constructor with optional parent widget" signature="MainWindow(QWidget *parent)">
                <parameter left="QWidget *" right="" name="parent" default="nullptr"/>
            </function>
            <function threadsafety="unspecified" name="closeEvent" fullname="MainWindow::closeEvent" href="mainwindow.html#closeEvent" status="active" access="protected" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="60" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Overrided closeEvent function used to save JSON data. The event arguement carries event data" signature="void closeEvent(QCloseEvent *event)">
                <parameter left="QCloseEvent *" right="" name="event" default=""/>
            </function>
            <function threadsafety="unspecified" name="configureSerialPort" fullname="MainWindow::configureSerialPort" href="mainwindow.html#configureSerialPort" status="internal" access="private" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="33" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Find correct NXP device and prepare data broadcast" signature="void configureSerialPort()"/>
            <function threadsafety="unspecified" name="connectHandlers" fullname="MainWindow::connectHandlers" href="mainwindow.html#connectHandlers" status="internal" access="private" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="34" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Connect all signals with handlers" signature="void connectHandlers()"/>
            <function threadsafety="unspecified" name="loadJsonData" fullname="MainWindow::loadJsonData" href="mainwindow.html#loadJsonData" status="active" access="private" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="35" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void loadJsonData()"/>
            <function threadsafety="unspecified" name="onHumidityChanged" fullname="MainWindow::onHumidityChanged" href="mainwindow.html#onHumidityChanged" status="internal" access="private" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="43" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Humidity changed slot. This is used for presenting and storing actual values. The humidity parameter holds new value" signature="void onHumidityChanged(double humidity)">
                <parameter left="double" right="" name="humidity" default=""/>
            </function>
            <function threadsafety="unspecified" name="onPressureChanged" fullname="MainWindow::onPressureChanged" href="mainwindow.html#onPressureChanged" status="internal" access="private" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="44" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Pressure changed slot. This is used for presenting and storing actual values. The pressure parameter holds new value" signature="void onPressureChanged(double pressure)">
                <parameter left="double" right="" name="pressure" default=""/>
            </function>
            <function threadsafety="unspecified" name="onSensorDataChanged" fullname="MainWindow::onSensorDataChanged" href="mainwindow.html#onSensorDataChanged" status="active" access="private" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="45" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void onSensorDataChanged(const SensorData data)">
                <parameter left="const SensorData" right="" name="data" default=""/>
            </function>
            <function threadsafety="unspecified" name="onTemperatureChanged" fullname="MainWindow::onTemperatureChanged" href="mainwindow.html#onTemperatureChanged" status="internal" access="private" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="42" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Temperature changed slot. This is used for presenting and storing actual values. The temperature parameter holds new value" signature="void onTemperatureChanged(double temperature)">
                <parameter left="double" right="" name="temperature" default=""/>
            </function>
            <function threadsafety="unspecified" name="onThreadTick" fullname="MainWindow::onThreadTick" href="mainwindow.html#onThreadTick" status="internal" access="private" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="38" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="External thread tick handler. It is used for checking USB data presence" signature="void onThreadTick()"/>
            <function threadsafety="unspecified" name="onTimerTimeout" fullname="MainWindow::onTimerTimeout" href="mainwindow.html#onTimerTimeout" status="internal" access="private" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="39" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Timer timeout handler. It sends USB commands" signature="void onTimerTimeout()"/>
            <function threadsafety="unspecified" name="setTimerTimeout" fullname="MainWindow::setTimerTimeout" href="mainwindow.html#setTimerTimeout" status="active" access="public" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="30" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Set sensor data readout frequency. It is used for choosing USB data refresh time. The timeout parameter stores new timeout in milliseconds" signature="void setTimerTimeout(int timeout)">
                <parameter left="int" right="" name="timeout" default=""/>
            </function>
            <function threadsafety="unspecified" name="~MainWindow" fullname="MainWindow::~MainWindow" href="mainwindow.html#dtor.MainWindow" status="active" access="public" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="29" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" brief="MainWindow destructor" signature="~MainWindow()"/>
            <variable threadsafety="unspecified" name="DefaultRefresh" fullname="MainWindow::DefaultRefresh" href="mainwindow.html#DefaultRefresh-var" status="active" access="public" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="25" type="const int = 500" static="true" brief="This variable holds the variable stores default USB data refresh time"/>
            <variable threadsafety="unspecified" name="JsonFilename" fullname="MainWindow::JsonFilename" href="mainwindow.html#JsonFilename-var" status="active" access="public" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="26" type="const QString" static="true" brief="Default JSON filename"/>
            <variable threadsafety="unspecified" name="SendAllCommand" fullname="MainWindow::SendAllCommand" href="mainwindow.html#SendAllCommand-var" status="active" access="public" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="24" type="const QString" static="true" brief="Default command for sending all sensor data"/>
        </class>
        <class threadsafety="unspecified" name="Parser" href="parser.html" status="active" access="public" location="parser.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/parser.h" lineno="8" module="core" brief="Way to parse crude sensor data">
            <function threadsafety="unspecified" name="Parser" fullname="Parser::Parser" href="parser.html#Parser" status="active" access="public" location="parser.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/parser.h" lineno="14" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" brief="Parser class constructor with optional parent object" signature="Parser(QObject *parent)">
                <parameter left="QObject *" right="" name="parent" default="nullptr"/>
            </function>
            <function threadsafety="unspecified" name="allDataChanged" fullname="Parser::allDataChanged" href="parser.html#allDataChanged" status="active" access="public" location="parser.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/parser.h" lineno="22" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Signal is emmited when all data has changed. The data pressure parameter holds the actual object" signature="void allDataChanged(SensorData data)">
                <parameter left="SensorData" right="" name="data" default=""/>
            </function>
            <function threadsafety="unspecified" name="humidityChanged" fullname="Parser::humidityChanged" href="parser.html#humidityChanged" status="active" access="public" location="parser.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/parser.h" lineno="20" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Signal is emmited when humidity has changed. The humidity parameter holds the actual value" signature="void humidityChanged(double humidity)">
                <parameter left="double" right="" name="humidity" default=""/>
            </function>
            <function threadsafety="unspecified" name="parseSensorData" fullname="Parser::parseSensorData" href="parser.html#parseSensorData" status="active" access="public" location="parser.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/parser.h" lineno="16" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Parse crude sensor data. The function will fill in data if all data is gained. The data format is T{value}|H{value}|P{value}, where {value} is a placeholder for real sensor value. This function emits" signature="void parseSensorData(const QString &amp;data)">
                <parameter left="const QString &amp;" right="" name="data" default=""/>
            </function>
            <function threadsafety="unspecified" name="pressureChanged" fullname="Parser::pressureChanged" href="parser.html#pressureChanged" status="active" access="public" location="parser.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/parser.h" lineno="21" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Signal is emmited when pressure has changed. The pressure parameter holds the actual value" signature="void pressureChanged(double pressure)">
                <parameter left="double" right="" name="pressure" default=""/>
            </function>
            <function threadsafety="unspecified" name="temperatureChanged" fullname="Parser::temperatureChanged" href="parser.html#temperatureChanged" status="active" access="public" location="parser.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/parser.h" lineno="19" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Signal is emmited when temperature has changed. The temperature parameter holds the actual value" signature="void temperatureChanged(double temperature)">
                <parameter left="double" right="" name="temperature" default=""/>
            </function>
            <variable threadsafety="unspecified" name="SensorsCount" fullname="Parser::SensorsCount" href="parser.html#SensorsCount-var" status="active" access="public" location="parser.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/parser.h" lineno="12" type="const int = 3" static="true" brief="This variable holds the variable stores number of sensors used"/>
        </class>
        <class threadsafety="unspecified" name="SensorData" href="sensordata.html" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="8" module="core" brief="Represents single data measurment">
            <function threadsafety="unspecified" name="fromJson" fullname="SensorData::fromJson" href="sensordata.html#fromJson" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="37" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="SensorData" brief="Create SensorData object using serialized JSON data. Input JSON is input" signature="SensorData fromJson(const QJsonObject &amp;input)">
                <parameter left="const QJsonObject &amp;" right="" name="input" default=""/>
            </function>
            <function threadsafety="unspecified" name="SensorData" fullname="SensorData::SensorData" href="sensordata.html#SensorData" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="14" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" brief="Default SensorData constructor sets all sensor data to zero" signature="SensorData()"/>
            <function threadsafety="unspecified" name="SensorData" fullname="SensorData::SensorData" href="sensordata.html#SensorData-1" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="15" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" brief="Sensor data constructor initializes all values using temperature, humidity and pressure arguments" signature="SensorData(double temperature, double humidity, double pressure)">
                <parameter left="double" right="" name="temperature" default=""/>
                <parameter left="double" right="" name="humidity" default=""/>
                <parameter left="double" right="" name="pressure" default=""/>
            </function>
            <function threadsafety="unspecified" name="deserialize" fullname="SensorData::deserialize" href="sensordata.html#deserialize" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="36" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Deserialize sensor readout from JSON object. Input JSON is input" signature="void deserialize(const QJsonObject &amp;input)">
                <parameter left="const QJsonObject &amp;" right="" name="input" default=""/>
            </function>
            <function threadsafety="unspecified" name="setDateTime" fullname="SensorData::setDateTime" href="sensordata.html#setDateTime" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="26" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Set measurement date using value parameter" signature="void setDateTime(const QDateTime &amp;value)">
                <parameter left="const QDateTime &amp;" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="setHumidity" fullname="SensorData::setHumidity" href="sensordata.html#setHumidity" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="22" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Set current humidity using value parameter" signature="void setHumidity(double value)">
                <parameter left="double" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="setPressure" fullname="SensorData::setPressure" href="sensordata.html#setPressure" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="24" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setPressure(double value)">
                <parameter left="double" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="setTemperature" fullname="SensorData::setTemperature" href="sensordata.html#setTemperature" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="20" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Set current temperature using value parameter" signature="void setTemperature(double value)">
                <parameter left="double" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="getDateTime" fullname="SensorData::getDateTime" href="sensordata.html#getDateTime" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="25" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QDateTime" brief="Get measurement date" signature="QDateTime getDateTime() const"/>
            <function threadsafety="unspecified" name="calcLunarProperties" fullname="SensorData::calcLunarProperties" href="sensordata.html#calcLunarProperties" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="32" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QPair&lt;double, bool&gt;" brief="Calculate lunar phase and increasing/decreasing rate and returns them TODO implement method" signature="QPair&lt;double, bool&gt; calcLunarProperties() const"/>
            <function threadsafety="unspecified" name="toString" fullname="SensorData::toString" href="sensordata.html#toString" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="39" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" brief="Return string containing all sensor data. This is for testing purposes" signature="QString toString() const"/>
            <function threadsafety="unspecified" name="calcBioConds" fullname="SensorData::calcBioConds" href="sensordata.html#calcBioConds" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="31" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" brief="Calculate biometeorological conditions and returns it TODO implement method" signature="bool calcBioConds() const"/>
            <function threadsafety="unspecified" name="operator==" fullname="SensorData::operator==" href="sensordata.html#operator-eq-eq" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="16" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" brief="Equality operator. It returns true if other date is the same, false otherwise" signature="bool operator==(const SensorData &amp;other) const">
                <parameter left="const SensorData &amp;" right="" name="other" default=""/>
            </function>
            <function threadsafety="unspecified" name="calcCloudiness" fullname="SensorData::calcCloudiness" href="sensordata.html#calcCloudiness" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="29" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" brief="Calculate cloudiness and returns it TODO implement method" signature="double calcCloudiness() const"/>
            <function threadsafety="unspecified" name="calcPerseivedTemperature" fullname="SensorData::calcPerseivedTemperature" href="sensordata.html#calcPerseivedTemperature" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="30" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" brief="Calculate perseived temperature and returns it TODO implement method" signature="double calcPerseivedTemperature() const"/>
            <function threadsafety="unspecified" name="getHumidity" fullname="SensorData::getHumidity" href="sensordata.html#getHumidity" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="21" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" brief="Get current humidity" signature="double getHumidity() const"/>
            <function threadsafety="unspecified" name="getPressure" fullname="SensorData::getPressure" href="sensordata.html#getPressure" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="23" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" brief="Get current pressure" signature="double getPressure() const"/>
            <function threadsafety="unspecified" name="getTemperature" fullname="SensorData::getTemperature" href="sensordata.html#getTemperature" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="19" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" brief="Get current temperature" signature="double getTemperature() const"/>
            <function threadsafety="unspecified" name="serialize" fullname="SensorData::serialize" href="sensordata.html#serialize" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="35" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Serialize sensor readout as JSON object. Output JSON is output" signature="void serialize(QJsonObject &amp;output) const">
                <parameter left="QJsonObject &amp;" right="" name="output" default=""/>
            </function>
            <variable threadsafety="unspecified" name="DateFormat" fullname="SensorData::DateFormat" href="sensordata.html#DateFormat-var" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="11" type="const QString" static="true" brief="Date format used in application"/>
            <variable threadsafety="unspecified" name="TimeFormat" fullname="SensorData::TimeFormat" href="sensordata.html#TimeFormat-var" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="12" type="const QString" static="true" brief="Time format used in application"/>
        </class>
        <class threadsafety="unspecified" name="Thread" href="thread.html" status="active" access="public" location="thread.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/thread.h" lineno="6" module="core" brief="Way to do some tasks parallel">
            <function threadsafety="unspecified" name="Thread" fullname="Thread::Thread" href="thread.html#Thread" status="active" access="public" location="thread.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/thread.h" lineno="10" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" brief="Constructor with optional parent object" signature="Thread(QObject *parent)">
                <parameter left="QObject *" right="" name="parent" default="nullptr"/>
            </function>
            <function threadsafety="unspecified" name="run" fullname="Thread::run" href="thread.html#run" status="internal" access="private" location="thread.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/thread.h" lineno="13" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" brief="Thread behaviour" signature="void run() override"/>
            <function threadsafety="unspecified" name="tick" fullname="Thread::tick" href="thread.html#tick" status="active" access="public" location="thread.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/thread.h" lineno="16" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Signal is emmited with 1ms frequency" signature="void tick()"/>
        </class>
        <module name="core" href="core-module.html" status="internal" seen="false" title="" members="DataStorage,MainWindow,Parser,SensorData,Thread"/>
    </namespace>
</INDEX>
